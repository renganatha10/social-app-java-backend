plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.renga'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
	maven { url 'https://repo.spring.io/snapshot' }
  	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('mapstructVersion', "1.3.1.Final")
	set('springCloudVersion', "Hoxton.SR1")
	set('generatedMainJava', "${buildDir}/generated/main/java")
}

compileJava {
	options.compilerArgs += ['-AaddGenerationDate=true']
	options.annotationProcessorGeneratedSourcesDirectory = file(generatedMainJava)
}

sourceSets {
	main.java.srcDir generatedMainJava
}


dependencies {
	implementation project(':api')
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.hibernate:hibernate-jpamodelgen'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}